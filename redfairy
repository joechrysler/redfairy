#!/usr/bin/env ruby
require "rubygems"
require "redis"


# Like the legendary fairy in a bottle, this wee bit o ruby
# hovers around a redis server, reviving him when he falls.

host = 'localhost'
port = 6379
conf = 'logs.conf'
for_a_while = 10 #seconds

command = ARGV[0] || 'start'

stop_threads = []
if command == 'stop'
	puts "Kill running redfairies..."
	stop_threads << Thread.new {system 'ps -eopid,cmd | grep redfairy | grep -v grep | cut -c-5 | xargs -r kill'}
end
if command =~ /stop|restart/
	puts "Kill running redis servers..."
	stop_threads << Thread.new {system "ps -eopid,cmd | grep 'redis-server #{conf}' | grep -v grep | cut -c-5 | xargs -r kill"}
end
stop_threads.each {|t| t.join}

loop do
	threads = []
	begin
		db = Redis.new(:host => host, :port => port)
		puts "Server maintaining #{db.dbsize} healthy keys in #{db.info['used_memory_human']} memory."
		GC.start # free up the database object, elsewise memory usage creeps up
	rescue
		threads << Thread.new {system "redis-server #{conf} && echo \"Starting server...\""}
	end

	threads.each {|t| t.join}

	sleep for_a_while
end unless command == 'stop'
